import './App.css';
import { AiOutlineDelete } from "react-icons/ai";
import { BsCheckLg } from "react-icons/bs";
import React, { useState,useEffect } from "react";

function App() {
  const [isCompleteScreen,setIsCompleteScreen] = useState(false);
  const [allTodos,setTodos] = useState([]);
  const [newTitle,setnewTitle] = useState("");
  const [newDescription,setNewDescription] = useState("");
  const [completedTodos,setcompletedTodos] = useState([]);
  const handleAddTodo =()=>{
    let newTodoItem = {
      title:newTitle,
      description:newDescription
    }
    let updatedTodoArr = [...allTodos];
    updatedTodoArr.push(newTodoItem);
    setTodos(updatedTodoArr);
    localStorage.setItem('todolist',JSON.stringify(updatedTodoArr))
  };

  const handleDeleteTodo =(index)=>{
    let reducedTodo = [...allTodos];
    reducedTodo.splice(index,1);
    localStorage.setItem('todolist',JSON.stringify(reducedTodo));
    setTodos(reducedTodo)
  };

  const handleDeletecompletedTodos =(index)=>{
    let reducedTodo = [...completedTodos];
    reducedTodo.splice(index,1);
    localStorage.setItem('completedTodos',JSON.stringify(reducedTodo));
    setcompletedTodos(reducedTodo)
  };


  const handleComplete =(index)=>{
    let now = new Date();
    let dd = now.getDate();
    let mm = now.getMonth() + 1;
    let yyyy = now.getFullYear();
    let h = now.getHours();
    let m = now.getMonth();
    let s = now.getSeconds();
    let completedOn = dd + '-' + mm + '-'+ yyyy + ' at ' + h + ':'+m+':'+s;
    let filteredItem = {
      ...allTodos[index],
      completedOn:completedOn
    }
    let updatedCompletedArr = [...completedTodos]
    updatedCompletedArr.push(filteredItem);
    setcompletedTodos(updatedCompletedArr);
    handleDeleteTodo(index);
  }

  useEffect(()=>{
    let savedTodo = JSON.parse(localStorage.getItem('todolist'));
    let savedcompletedTodos = JSON.parse(localStorage.getItem('completedTodos'))
    if(savedTodo){
      setTodos(savedTodo);
    }
    if(savedcompletedTodos){
      setcompletedTodos(savedcompletedTodos)
    }
  },[])
  return (
    <div className="App">
        <h3>My Todo Tasks</h3>
        <div className='todo-wrapper'>
          <div className='todo-input'>
          <div className='todo-input-item'>
              <label>Title</label>
              <input type="text" value={newTitle} onChange={(e)=>setnewTitle(e.target.value)}placeholder="What's the task you want to do?" />
            </div>
            <div className='todo-input-item'>
              <label>Description</label>
              <input type="text" value={newDescription} onChange={(e)=>setNewDescription(e.target.value)} placeholder="What is it about?" />
            </div>
            <div className='todo-input-item'>
            <button type='button' onClick={handleAddTodo}className='primaryBtn'>Add Task</button>
          </div>
        </div>
    
    <div className='btn-area'>
      <button className={`secondaryBtn-1 ${isCompleteScreen===false && 'active'}`} 
      onClick={()=>setIsCompleteScreen(false)}>Todo</button>
      <button className={`secondaryBtn-2 ${isCompleteScreen===true && 'active'}`}
      onClick={()=>setIsCompleteScreen(true)}>Completed</button>
    </div>
    <div className='todo-list'>

      {isCompleteScreen===false && allTodos.map((item,index)=>{
        return(
      <div className="todo-list-item" key={index}>
        <div class="content">
        <h1>Task</h1>
        <p>Description</p>
        <h4>{item.title}</h4>
        <p1>{item.description}</p1>
        </div>
        <div class="icons"></div>
        <AiOutlineDelete className='delete-icon' onClick={()=>handleDeleteTodo(index)}/>
        <BsCheckLg className='check-icon'onClick={()=>handleComplete(index)}/>
      </div>)})}

      {isCompleteScreen===true && completedTodos.map((item,index)=>{
        return(
      <div className="todo-list-item" key={index}>
        <div class="content">
        <h1>Task</h1>
        <p>Description</p>
        <h4>{item.title}</h4>
        <p1>{item.description}</p1>
        </div>
        <div class="icons"></div>
        <p1><small>Completed on: {item.completedOn}</small></p1>
        <AiOutlineDelete 
        className='delete-icon' 
        onClick={()=>handleDeletecompletedTodos(index)}
        title="Delete?"/>
      </div>)})}
      
    </div>
    </div>
    </div>
  );
}

export default App;
